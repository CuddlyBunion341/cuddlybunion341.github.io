---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import BlogPostCard from "../../components/BlogPostCard.astro";
import Tags from "../../components/Tags.astro";

const allBlogPosts = await getCollection("blog");
const sortedPosts = allBlogPosts.sort((a, b) =>
  new Date(b.data.publishedAt) > new Date(a.data.publishedAt) ? 1 : -1,
);
const latestPost = sortedPosts[0] || {
  slug: "",
  data: {
    title: "",
    description: "",
    publishedAt: "",
    tags: [],
  },
};
const olderPosts = sortedPosts.slice(1);
---

<BaseLayout title="Blog">
  <h1>Blog</h1>

  {
    sortedPosts.length > 0 ? (
      <>
        <section>
          <h2>Latest Post</h2>
          <article>
            <h3>
              <a href={`/blog/${latestPost.slug}`}>
                {latestPost.data.title}
              </a>
            </h3>

            <div class="meta">
              <em>
                <time datetime={new Date(latestPost.data.publishedAt).toISOString()}>
                  {new Date(latestPost.data.publishedAt)
                    .toLocaleDateString("en-GB")
                    .split("/")
                    .join(".")}
                </time>
              </em>
              <Tags
                tags={latestPost.data.tags}
                path={(tag) => `/blog/tags/${tag}`}
              />
            </div>

            <p>{latestPost.data.description}</p>

            <p>
              <a href={`/blog/${latestPost.slug}`}>Read more</a>
            </p>
          </article>
        </section>

        {olderPosts.length > 0 && (
          <section>
            <h2>More Posts</h2>

            <div class="grid">
              {olderPosts.map((post) => (
                <BlogPostCard post={post} />
              ))}
            </div>
          </section>
        )}
      </>
    ) : (
      <p>No blog posts available yet.</p>
    )
  }
</BaseLayout>

---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
const allBlogPosts = await getCollection("blog");
const allProjects = await getCollection("projects");
import allTags from "../../data/tags.json";

const entryTags = [...allBlogPosts, ...allProjects]
  .map((entry) => entry.data.tags)
  .flat();

const mergedTags = [...allTags];

entryTags.forEach((tag) => {
  if (!mergedTags.find((t) => t.slug === tag)) {
    mergedTags.push({
      slug: tag,
      name: tag.replace(/\b\w/g, (l: string) => l.toUpperCase()),
      description: "",
    });
  }
});

const getCountAndUrl = (
  items: { slug: string; collection: string; data: { tags: string[] } }[],
  tag: { slug: string },
) => {
  const itemsWithTag = items.filter((item) =>
    item.data.tags.includes(tag.slug),
  );
  const count = itemsWithTag.length;
  if (count === 0) return { count: 0, url: "#" };
  const url =
    count === 1
      ? `/${items[0]?.collection}/${itemsWithTag[0]?.slug}`
      : `/${items[0]?.collection}/tags/${tag.slug}`;

  return { count, url };
};

const pluralize = (count: number, word: string) =>
  count === 1 ? word : `${word}s`;
---

<BaseLayout>
  <div class="container mx-auto px-4">
    <h1 class="text-3xl font-bold mb-6 leading-tight">Tags</h1>
    <p class="mb-8 text-gray-600 dark:text-gray-300">Browse content by topic tags across blog posts and projects.</p>
    
    <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6 mb-8">
      <ul class="grid grid-cols-1 md:grid-cols-2 gap-6">
        {
          mergedTags.map((tag) => {
            const { count: projectCount, url: projectUrl } = getCountAndUrl(
              allProjects,
              tag,
            );
            const { count: postCount, url: postUrl } = getCountAndUrl(
              allBlogPosts,
              tag,
            );
            
            const totalCount = projectCount + postCount;

            return (
              <li class="bg-gray-50 dark:bg-gray-700 rounded-lg overflow-hidden shadow-sm hover:shadow-md transition-all duration-300 border border-gray-200 dark:border-gray-600">
                <div class="p-5">
                  <div class="flex items-center justify-between mb-3">
                    <h2 class="text-xl font-semibold text-gray-900 dark:text-white">{tag.name}</h2>
                    <span class="bg-blue-100 text-blue-800 text-xs font-medium px-2.5 py-0.5 rounded-full dark:bg-blue-900 dark:text-blue-300">
                      {totalCount} {pluralize(totalCount, "item")}
                    </span>
                  </div>
                  
                  {tag.description && <p class="text-gray-600 dark:text-gray-300 mb-4">{tag.description}</p>}
                  
                  <div class="flex flex-wrap gap-2 mt-4">
                    {projectCount > 0 && (
                      <a 
                        href={projectUrl} 
                        class="inline-flex items-center px-3 py-1.5 text-sm font-medium text-gray-700 bg-gray-200 rounded-md hover:bg-gray-300 dark:bg-gray-600 dark:text-gray-200 dark:hover:bg-gray-500 transition-colors"
                      >
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z" />
                        </svg>
                        {projectCount} {pluralize(projectCount, "Project")}
                      </a>
                    )}
                    
                    {postCount > 0 && (
                      <a 
                        href={postUrl}
                        class="inline-flex items-center px-3 py-1.5 text-sm font-medium text-blue-700 bg-blue-100 rounded-md hover:bg-blue-200 dark:bg-blue-900 dark:text-blue-200 dark:hover:bg-blue-800 transition-colors"
                      >
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 20H5a2 2 0 01-2-2V6a2 2 0 012-2h10a2 2 0 012 2v1m2 13a2 2 0 01-2-2V7m2 13a2 2 0 002-2V9a2 2 0 00-2-2h-2m-4-3H9M7 16h6M7 8h6v4H7V8z" />
                        </svg>
                        {postCount} {pluralize(postCount, "Post")}
                      </a>
                    )}
                    
                    {postCount > 0 && projectCount > 0 && (
                      <a
                        class="inline-flex items-center px-3 py-1.5 text-sm font-medium text-purple-700 bg-purple-100 rounded-md hover:bg-purple-200 dark:bg-purple-900 dark:text-purple-200 dark:hover:bg-purple-800 transition-colors"
                        href={`/tags/${tag.slug}`}
                      >
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
                        </svg>
                        View All
                      </a>
                    )}
                  </div>
                </div>
              </li>
            );
          })
        }
      </ul>
    </div>
  </div>
</BaseLayout>
